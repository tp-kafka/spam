name: Master CICD

on:
  push:
    branches: [ "bonus/A" ]

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build native with Maven
      run: mvn -B package -DKAFKA_API_KEY=${{secrets.KAFKA_API_KEY}}  -DKAFKA_API_SECRET=${{secrets.KAFKA_API_SECRET}} -DKAFKA_SERVER=${{secrets.KAFKA_SERVER}} -DskipTests -Dquarkus.native.container-build=false -Dquarkus.container-image.build=true
    - name: Upload target for next job
      uses: actions/upload-artifact@v1
      with:
        name: target
        path: target

  deploy_to_heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v2
    - name: Download target from previous job
      uses: actions/download-artifact@v1
      with:
        name: target
    
    - uses: akhileshns/heroku-deploy@master # This is the action
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: "tpkafka-spam-processor"
            heroku_email: "tobias.waller@googlemail.com"              
    - name: Login into Heroku
      uses: actions/heroku@master
      with:
        args: container:login
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP: ${{ secrets.HEROKU_APP }}
    - name: Build and Push to Heroku Registry
      uses: actions/heroku@master
      with:
        args: container:push web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP: ${{ secrets.HEROKU_APP }}
    - name: Trigger release in Heroku
      uses: actions/heroku@master
      with:
        args: container:release web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP: ${{ secrets.HEROKU_APP }}
